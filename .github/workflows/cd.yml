name: Java CD with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Generate JOOQ classes
        run: ./gradlew jooqCodegen

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/lightsail_key
          chmod 600 ~/.ssh/lightsail_key

      - name: Deploy to Lightsail
        run: |
          JAR_FILE=build/libs/api-0.0.1-SNAPSHOT.jar
          if [ ! -f "$JAR_FILE" ]; then
            echo "Error: JAR file $JAR_FILE not found"
            exit 1
          fi
          # JAR 파일 전송
          scp -i ~/.ssh/lightsail_key -P ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no "$JAR_FILE" ${{ secrets.SSH_USER }}@${{ secrets.HOST }}:/home/${{ secrets.SSH_USER }}/api-0.0.1-SNAPSHOT.jar
          # 배포 스크립트 전송
          scp -i ~/.ssh/lightsail_key -P ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no deploy.sh ${{ secrets.SSH_USER }}@${{ secrets.HOST }}:/home/${{ secrets.SSH_USER }}/deploy.sh
          # 스크립트 실행
          ssh -i ~/.ssh/lightsail_key -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.HOST }} "chmod +x /home/${{ secrets.SSH_USER }}/deploy.sh && /home/${{ secrets.SSH_USER }}/deploy.sh"